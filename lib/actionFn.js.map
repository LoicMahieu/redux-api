{"version":3,"sources":["../src/actionFn.js"],"names":["actionFn","none","extractArgs","args","pathvars","params","callback","Function","helperCrudFunction","name","cb","method","toUpperCase","defaultMiddlewareArgsParser","dispatch","getState","CRUD","reduce","memo","url","options","ACTIONS","meta","actionFetch","actionSuccess","actionFail","actionReset","pubsub","requestHolder","request","responseHandler","holder","resultUrlT","urlOptions","urlT","rootUrl","rootUrlObject","parse","urlObject","host","urlPath","path","replace","protocol","globalOptions","baseOptions","opts","response","fetch","result","validation","then","Promise","resolve","reject","data","err","ret","res","undefined","catch","fn","syncing","push","middlewareParser","reducerName","prefix","state","isLoading","requestOptions","prevData","type","fetchResolverOpts","actions","prefetch","done","fail","set","promise","d","pop","transformer","origData","broadcast","forEach","postfetch","error","reset","mutation","defer","Error","sync","isServer","server","store","modifyParams","helpers","crud","fnHelperCallback","func","helpername","call","index","length","callbackFn","helpersResult","newArgs","concat","Object","keys","key"],"mappings":"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","file":"actionFn.js","sourcesContent":["\"use strict\";\n\nimport fastApply from \"fast-apply\";\nimport libUrl from \"url\";\nimport urlTransform from \"./urlTransform\";\nimport merge from \"./utils/merge\";\nimport get from \"./utils/get\";\nimport fetchResolver from \"./fetchResolver\";\nimport PubSub from \"./PubSub\";\nimport createHolder from \"./createHolder\";\n\nfunction none() {}\n\nfunction extractArgs(args) {\n  let pathvars;\n  let params={};\n  let callback;\n  if (args[0] instanceof Function) {\n    callback = args[0];\n  } else if (args[1] instanceof Function) {\n    pathvars = args[0];\n    callback = args[1];\n  } else {\n    pathvars = args[0];\n    params = args[1];\n    callback = args[2] || none;\n  }\n  return [pathvars, params, callback];\n}\n\nfunction helperCrudFunction(name) {\n  return (...args)=> {\n    const [pathvars, params, cb] = extractArgs(args);\n    return [pathvars, { ...params, method: name.toUpperCase() }, cb];\n  };\n}\n\nfunction defaultMiddlewareArgsParser(dispatch, getState) {\n  return { dispatch, getState };\n}\n\nexport const CRUD = [\"get\", \"post\", \"put\", \"delete\", \"patch\"].reduce(\n  (memo, name)=> {\n    memo[name] = helperCrudFunction(name);\n    return memo;\n  }, {});\n\n/**\n * Constructor for create action\n * @param  {String} url          endpoint's url\n * @param  {String} name         action name\n * @param  {Object} options      action configuration\n * @param  {Object} ACTIONS      map of actions\n * @param  {[type]} fetchAdapter adapter for fetching data\n * @return {Function+Object}     action function object\n */\nexport default function actionFn(url, name, options, ACTIONS={}, meta={}) {\n  const { actionFetch, actionSuccess, actionFail, actionReset } = ACTIONS;\n  const pubsub = new PubSub();\n  const requestHolder = createHolder();\n  /**\n   * Fetch data from server\n   * @param  {Object}   pathvars    path vars for url\n   * @param  {Object}   params      fetch params\n   * @param  {Function} getState    helper meta function\n  */\n  const request = (pathvars, params, getState=none)=> {\n    const responseHandler = meta && meta.holder && meta.holder.responseHandler;\n    const resultUrlT = urlTransform(url, pathvars, meta.urlOptions);\n    let urlT = resultUrlT;\n    let rootUrl = meta.holder ? meta.holder.rootUrl : null;\n    rootUrl = (rootUrl instanceof Function) ?\n      rootUrl(urlT, params, getState) :\n      rootUrl;\n    if (rootUrl) {\n      const rootUrlObject = libUrl.parse(rootUrl);\n      const urlObject = libUrl.parse(urlT);\n      if (!urlObject.host) {\n        const urlPath = (rootUrlObject.path ? rootUrlObject.path.replace(/\\/$/, \"\") : \"\") +\n          \"/\" + (urlObject.path ? urlObject.path.replace(/^\\//, \"\") : \"\");\n        urlT = `${rootUrlObject.protocol}//${rootUrlObject.host}${urlPath}`;\n      }\n    }\n    const globalOptions = !meta.holder ? {} :\n      (meta.holder.options instanceof Function) ?\n        meta.holder.options(urlT, params, getState) : (meta.holder.options);\n    const baseOptions = (options instanceof Function) ?\n      options(urlT, params, getState) :\n      options;\n    const opts = merge({}, globalOptions, baseOptions, params);\n    const response = meta.fetch(urlT, opts);\n    const result = !meta.validation ? response : response.then(\n      data=> new Promise(\n        (resolve, reject)=> meta.validation(data,\n          err=> err ? reject(err) : resolve(data))));\n    let ret = result;\n    if (responseHandler) {\n      if (result && result.then) {\n        ret = result.then(\n          (data)=> {\n            const res = responseHandler(null, data);\n            if (res === undefined) {\n              return data;\n            } else {\n              return res;\n            }\n          },\n          err=> responseHandler(err)\n        );\n      } else {\n        ret = responseHandler(result);\n      }\n    }\n    ret && ret.catch && ret.catch(none);\n    return ret;\n  };\n\n  /**\n   * Fetch data from server\n   * @param  {Object}   pathvars    path vars for url\n   * @param  {Object}   params      fetch params\n   * @param  {Function} callback)   callback execute after end request\n   */\n  function fn(...args) {\n    const [pathvars, params, callback] = extractArgs(args);\n    const syncing = params ? !!params.syncing : false;\n    params && delete params.syncing;\n    pubsub.push(callback);\n    return (...middlewareArgs)=> {\n      const middlewareParser = (meta.holder && meta.holder.middlewareParser) ||\n        defaultMiddlewareArgsParser;\n      const { dispatch, getState } = middlewareParser(...middlewareArgs);\n      const { reducerName, prefix } = meta;\n      const state = getState();\n      const isLoading = get(state, prefix, reducerName, \"loading\");\n      if (isLoading) {\n        return;\n      }\n      const requestOptions = { pathvars, params };\n      const prevData =  get(state, prefix, reducerName, \"data\");\n      dispatch({ type: actionFetch, syncing, request: requestOptions });\n      const fetchResolverOpts = {\n        dispatch,\n        getState,\n        requestOptions,\n        actions: meta.actions,\n        prefetch: meta.prefetch\n      };\n      const result = new Promise((done, fail)=> {\n        fetchResolver(0, fetchResolverOpts, (err)=> {\n          if (err) {\n            pubsub.reject(err);\n            return fail(err);\n          }\n          new Promise((resolve, reject)=> {\n            requestHolder.set({\n              resolve,\n              reject,\n              promise: request(pathvars, params, getState).then(resolve, reject)\n            });\n          }).then((d)=> {\n            requestHolder.pop();\n            const data = meta.transformer(d, prevData, {\n              type: actionSuccess, request: requestOptions\n            });\n            dispatch({\n              data,\n              origData: d,\n              type: actionSuccess,\n              syncing: false,\n              request: requestOptions\n            });\n            if (meta.broadcast) {\n              meta.broadcast.forEach((type)=> {\n                dispatch({ type, data, origData: d, request: requestOptions });\n              });\n            }\n            if (meta.postfetch) {\n              meta.postfetch.forEach((postfetch)=> {\n                (postfetch instanceof Function) && postfetch({\n                  data, getState, dispatch, actions: meta.actions, request: requestOptions\n                });\n              });\n            }\n            pubsub.resolve(data);\n            done(data);\n          }, (error)=> {\n            dispatch({ type: actionFail, syncing: false, error, request: requestOptions });\n            pubsub.reject(error);\n            fail(error);\n          });\n        });\n      });\n      result.catch(none);\n      return result;\n    };\n  }\n\n  /*\n    Pure rest request\n   */\n  fn.request = request;\n\n  /**\n   * Reset store to initial state\n   */\n  fn.reset = (mutation)=> {\n    const defer = requestHolder.pop();\n    defer && defer.reject(new Error(\"Application abort request\"));\n    return mutation === \"sync\" ? { type: actionReset, mutation } : { type: actionReset };\n  };\n\n  /**\n   * Sync store with server. In server mode works as usual method.\n   * If data have already synced, data would not fetch after call this method.\n   * @param  {Object} pathvars    path vars for url\n   * @param  {Object} params      fetch params\n   * @param  {Function} callback) callback execute after end request\n   */\n  fn.sync = (...args)=> {\n    const [pathvars, params, callback] = extractArgs(args);\n    const isServer = meta.holder ? meta.holder.server : false;\n    return (dispatch, getState)=> {\n      const state = getState();\n      const store = state[name];\n      if (!isServer && store && store.sync) {\n        callback(null, store.data);\n        return;\n      }\n      const modifyParams = { ...params, syncing: true };\n      return fn(pathvars, modifyParams, callback)(dispatch, getState);\n    };\n  };\n\n  let helpers = meta.helpers || {};\n  if (meta.crud) {\n    helpers = { ...CRUD, ...helpers };\n  }\n  const fnHelperCallback = (memo, func, helpername)=> {\n    if (memo[helpername]) {\n      throw new Error(\n        `Helper name: \"${helpername}\" for endpoint \"${name}\" has been already reserved`\n      );\n    }\n    const { sync, call } = (func instanceof Function) ? { call: func } : func;\n    memo[helpername] = (...args)=> (dispatch, getState)=> {\n      const index = args.length - 1;\n      const callbackFn = (args[index] instanceof Function) ? args[index] : none;\n      const helpersResult = fastApply(call, { getState, dispatch, actions: meta.actions }, args);\n      const result = new Promise((resolve, reject)=> {\n        const callback = (err, data)=> {\n          err ? reject(err) : resolve(data);\n          callbackFn(err, data);\n        };\n        // If helper alias using async functionality\n        if (helpersResult instanceof Function) {\n          helpersResult((error, newArgs=[])=> {\n            if (error) {\n              callback(error);\n            } else {\n              fastApply(\n                sync ? fn.sync : fn, null, newArgs.concat(callback)\n              )(dispatch, getState);\n            }\n          });\n        } else {\n          // if helper alias is synchronous\n          const [pathvars, params] = helpersResult;\n          fastApply(\n            sync ? fn.sync : fn, null, [pathvars, params, callback]\n          )(dispatch, getState);\n        }\n      });\n      result.catch(none);\n      return result;\n    };\n    return memo;\n  };\n\n  return Object.keys(helpers).reduce(\n    (memo, key)=> fnHelperCallback(memo, helpers[key], key, helpers), fn);\n}\n"]}